# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-12 06:42
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contest', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('number', models.IntegerField()),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=200)),
                ('sequence', models.IntegerField()),
                ('weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Can not be lesser than 1%'), django.core.validators.MaxValueValidator(100, 'Can not be more than 100%')])),
            ],
            options={
                'ordering': ['sequence'],
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Criterion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, default='', max_length=200)),
                ('sequence', models.IntegerField()),
                ('weight', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Can not be lesser than 1%'), django.core.validators.MaxValueValidator(100, 'Can not be more than 100%')])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Category')),
            ],
            options={
                'ordering': ['category', 'sequence'],
                'verbose_name_plural': 'criteria',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Candidate')),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Criterion')),
            ],
        ),
        migrations.AddField(
            model_name='candidate',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Group'),
        ),
        migrations.AlterUniqueTogether(
            name='score',
            unique_together=set([('candidate', 'criterion')]),
        ),
    ]
